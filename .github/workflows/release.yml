name: Release Tauri App

on:
  push:
    tags:
      - "v*" # Triggers on version tags like v0.1.0, v1.2.3
  workflow_dispatch: # Allows manual trigger

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install frontend dependencies
        run: npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false

      - name: Generate latest.json
        run: |
          VERSION="${{ github.ref_name }}"
          VERSION_NO_V="${VERSION#v}"

          # Find the signature file
          SIG_FILE=$(find src-tauri/target/release/bundle/nsis -name "*.nsis.zip.sig" -type f | head -n 1)
          SIGNATURE=$(cat "$SIG_FILE")

          cat > latest.json << EOF
          {
            "version": "$VERSION_NO_V",
            "notes": "Release $VERSION",
            "pub_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "platforms": {
              "windows-x86_64": {
                "signature": "$SIGNATURE",
                "url": "https://github.com/${{ github.repository }}/releases/download/$VERSION/tauri-app_${VERSION_NO_V}_x64-setup.nsis.zip"
              }
            }
          }
          EOF

          echo "Generated latest.json:"
          cat latest.json
        shell: bash

      - name: Upload latest.json to release
        uses: softprops/action-gh-release@v1
        with:
          files: latest.json
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
